package com.gc.tdd;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

public class EvenNumberGeneratorTest {

	private static final int[] ZERO_INPUT = {0};
	EvenNumberGenerator eng = new EvenNumberGenerator();
	
	@Before
	public void setup(){
		eng = new EvenNumberGenerator();
	}

	@Test
	public void mustInstantiateGenerator() {
		eng = new EvenNumberGenerator();
		assertNotNull(eng);
	}
	
	@Test
	public void mustReturnZeroForZeroInput() throws Exception {
		int[] returnedValue = eng.generateAndGetEvenNumbers(ZERO_INPUT);
		assertEquals("Numbers do not match", ZERO_INPUT, returnedValue);
	}
	
	@Test (expected = IllegalArgumentException.class)
	public void mustThrowANExceptionForNegativeNumbers() throws Exception {
		int negativeOneInput = -1;
		eng.generateAndGetEvenNumbers(negativeOneInput);
	}
	
	@Test (expected = IllegalArgumentException.class)
	public void mustThrowAnExceptionForGreaterThanOneHundred() throws Exception {
		int oneHundredOneInput = 101;
		eng.generateAndGetEvenNumbers(oneHundredOneInput);
	} 
	
	@Test
	public void mustReturnZeroAbdTwoForTwoInput() throws Exception {
		int evenNumberInput = 2;
		int [] expected = {0,2};
		int [] returnedValue = eng.generateAndGetEvenNumbers(evenNumberInput);
		assertEquals(expected, returnedValue);
	}
	

}
